# Bitrix24 Custom WhatsApp Connector Setup

## üì¶ Package.json

```json
{
  "name": "bitrix24-whatsapp-connector",
  "version": "1.0.0",
  "description": "Custom WhatsApp connector for Bitrix24 using Baileys.js",
  "main": "whatsapp-handler.js",
  "scripts": {
    "start": "node whatsapp-handler.js",
    "dev": "nodemon whatsapp-handler.js"
  },
  "dependencies": {
    "@whiskeysockets/baileys": "^6.5.0",
    "@hapi/boom": "^10.0.1",
    "axios": "^1.6.0",
    "body-parser": "^1.20.2",
    "dotenv": "^16.3.1",
    "express": "^4.18.2"
  },
  "devDependencies": {
    "nodemon": "^3.0.1"
  },
  "keywords": [
    "bitrix24",
    "whatsapp",
    "connector",
    "baileys",
    "crm",
    "openlines"
  ],
  "author": "Your Name",
  "license": "MIT"
}

```

## üöÄ Setup Instructions

### Step 1: Create Bitrix24 Local Application

1. **Go to your Bitrix24 Developer Account**
   - Visit: `https://www.bitrix24.com/developers/`
   - Login with your developer account

2. **Create New Application**
   - Click "Create Application"
   - Choose "Local Application"
   - Fill in details:
     - **Name**: "Custom WhatsApp Connector"
     - **Code**: `custom_whatsapp_connector`
     - **Scopes**: `imconnector`, `imopenlines`, `crm`, `im`
     - **Installation URL**: `https://your-server.com/install.php`

3. **Get App Credentials**
   - Copy your `APP_ID` and `APP_SECRET`
   - Update them in `install.php`

### Step 2: Deploy Installation Script

1. **Upload `install.php`** to your web server
2. **Update configuration** in the file:
   ```php
   define('APP_ID', 'your_actual_app_id');
   define('APP_SECRET', 'your_actual_app_secret');
   ```
3. **Make sure your server has PHP and cURL enabled**

### Step 3: Install the App in Bitrix24

1. **Visit your installation URL**: `https://your-server.com/install.php`
2. **Enter your Bitrix24 domain** (e.g., `company.bitrix24.com`)
3. **Click "Install App"** - this will redirect to Bitrix24 OAuth
4. **Authorize the application** in Bitrix24
5. **Copy the access token** returned after successful installation

### Step 4: Setup Node.js Handler

1. **Install Node.js dependencies**:
   ```bash
   npm install
   ```

2. **Update configuration** in `whatsapp-handler.js`:
   ```javascript
   const config = {
       bitrix24Domain: 'your-company.bitrix24.com',
       accessToken: 'your_access_token_from_step_3',
       port: 3000,
       authDir: './whatsapp_auth'
   };
   ```

3. **Start the handler**:
   ```bash
   npm start
   ```

4. **Scan QR Code** to connect WhatsApp (first time only)

### Step 5: Configure Bitrix24 Webhooks (Optional)

If you want real-time agent replies, set up webhooks:

1. **Go to Bitrix24 ‚Üí Applications ‚Üí Webhooks**
2. **Add webhook** for event: `ONIMMESSAGEADD`
3. **Set URL**: `https://your-server.com/bitrix24/webhook`
4. **Save the webhook**

## üîß Configuration Options

### Environment Variables (Recommended)

Create `.env` file:
```env
BITRIX24_DOMAIN=your-company.bitrix24.com
BITRIX24_ACCESS_TOKEN=your_access_token
APP_ID=your_app_id
APP_SECRET=your_app_secret
PORT=3000
WEBHOOK_URL=https://your-server.com/bitrix24/webhook
```

### WhatsApp Session Management

- Authentication data is stored in `./whatsapp_auth/` directory
- **First run**: Scan QR code to authenticate
- **Subsequent runs**: Will use saved session automatically
- **To reset**: Delete the `whatsapp_auth` folder

## üìã Testing Checklist

### ‚úÖ Installation Verification

1. [ ] App appears in Bitrix24 ‚Üí Applications ‚Üí Local Apps
2. [ ] Custom connector visible in Contact Center
3. [ ] Access token received and valid
4. [ ] Node.js handler starts without errors
5. [ ] WhatsApp QR code appears and can be scanned

### ‚úÖ Message Flow Testing

1. [ ] Send WhatsApp message ‚Üí appears in Bitrix24 Conversations
2. [ ] Lead automatically created in CRM
3. [ ] Agent replies in Bitrix24 ‚Üí reaches WhatsApp
4. [ ] Message status updates work
5. [ ] Chat sessions maintain continuity

### ‚úÖ Error Handling

1. [ ] WhatsApp disconnection ‚Üí auto-reconnect works
2. [ ] Bitrix24 API errors ‚Üí proper logging
3. [ ] Invalid messages ‚Üí graceful handling
4. [ ] Network issues ‚Üí retry mechanism

## üêõ Troubleshooting

### Common Issues

**"imconnector.register failed"**
- Check if scopes include `imconnector`
- Verify access token is valid
- Ensure app is properly installed

**"WhatsApp QR not scanning"**
- Delete `whatsapp_auth` folder and restart
- Check console for authentication errors
- Ensure stable internet connection

**"Messages not appearing in Bitrix24"**
- Verify connector is activated (`imconnector.activate`)
- Check chat ID format and uniqueness
- Review Bitrix24 API response logs

**"Agent replies not reaching WhatsApp"**
- Confirm webhook URL is accessible
- Check webhook event configuration
- Verify chat session mapping

### Debug Mode

Enable detailed logging:
```javascript
const config = {
    // ... other config
    debug: true,
    logLevel: